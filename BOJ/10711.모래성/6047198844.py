# 문제

# 그가 만든 모래성을 2차원 격자단위로 만들었으며, 각 격자마다 튼튼함의 정도를 다르게 해서 성을 만들었다.
#   1부터 9 사이의 숫자로 표현될 수 있다.
#   자기 격자 주변의 8방향 (위 아래 왼쪽 오른쪽, 그리고 대각선) 을 봐서 모래성이 쌓여있지 않은 부분의 개수가 자기 모래성의 튼튼함보다 많거나 같은 경우 파도에 의해서 무너질 수 있음을 의미한다.
#   그 이외의 경우는 파도가 쳐도 무너지지 않는다. 모래성이 무너진 경우, 그 격자는 모래성이 쌓여있지 않은 것으로 취급한다.
#
# 이 모래성은 언젠가는 파도에 의해서 깎이고 깎여서, 결국 한가지 형태로 수렴할 것이다. 모래성을 완성한 명우는 문득 자신이 만든 예술품의 수명이 궁금해졌다.
# 모래성은 위에 서술한 바와 같이 파도가 한번 칠 때마다 특정 부분이 무너저내리는 방식으로 모양이 변화된다. 모래성이 더이상 모양이 변하지 않게 되려면 (모양이 수렴되려면) 파도가 몇번 쳐야하는지 구해보자.
#
# 입력
# 첫째 줄에는 모래성의 가로세로 격자 크기 H, W가 주어진다. (1 ≤ H, W ≤ 1,000)
#
# 그 다음 H줄에 걸쳐 W개의 문자로 모래성의 상태를 나타내는 문자가 들어온다.
#
# 각 문자는 1~9 사이의 숫자, 또는 '.' 이다. 1~9는 그 격자의 모래의 강도를 나타내며, '.'는 모래가 없다는 뜻이다.
#
# 모래성은 격자의 가장자리와 접해 있지 않다.
#
# 출력
# 몇번의 파도가 몰려오고나서야 모래성의 상태가 수렴하는지를 구한다.
import sys
from collections import deque

H, W = map(int, sys.stdin.readline().split())
# 전처리
board = [list(map(int, sys.stdin.readline().rstrip().replace('.', '0'))) for _ in range(H)]

# 무너진 구역
Q = deque([])
for y in range(H):
    for x in range(W):
        if board[y][x] == 0:
            Q.append((y, x))

res = 0
while True:
    for _ in range(len(Q)):
        y, x = Q.popleft()

        # 8방향 확인.
        for ny, nx in (y - 1, x - 1), (y - 1, x), (y - 1, x + 1), (y, x - 1), (y, x + 1), (y + 1, x - 1), (y + 1, x), (
        y + 1, x + 1):
            # 범위 확인
            if not (0 <= ny < H and 0 <= nx < W):
                continue
            if board[ny][nx] != 0:
                board[ny][nx] -= 1
                if board[ny][nx] == 0:
                    Q.append((ny, nx))
    if Q:
        res += 1
    else:
        break
print(res)